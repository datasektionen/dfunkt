extends layout

block content
  div(id='content')
    div(class='row')
      include sidebar.jade
      div(class='col-sm-8 col-md-9')
        h2 Sök efter personer på KTH med namn eller kthid.
        div(id='reactform')

  script(type="text/babel").
    function zfingerParseUser(user) {
      return {
        fullname: user.cn,
        kthid: user.uid,
      };
    }

    var SearchBox = React.createClass({
      getInitialState: function() {
        return {
          data: [],
          searching: false,
          didSearch: false,
        };
      },
      handleSubmit: function(query) {
        this.setState({searching: true, didSearch: true, data: []});
        $.ajax({
          url: "/kthpeople/search/" + encodeURIComponent(query),
          dataType: "json",
          cache: false,
          success: function(data) {
            console.log(data);
            this.setState({data: data.results.map(zfingerParseUser), searching: false});
          }.bind(this),
          failure: function(xhr, status, err) {
            console.error(this.props.url, status, err.toString());
            this.setState({searching: false});
          }.bind(this),
        });
        console.log('Sending search for "' + query + '"');
      },
      render: function() {
        var results;
        if (this.state.searching) {
          results = <p>Söker...</p>;
        } else if (this.state.didSearch && this.state.data.length == 0) {
          results = <p>Inga resultat alls. Du stavade rätt va?</p>;
        } else {
          results = <ResultList data={this.state.data} />;
        }
        return (
            <div>
              <SearchBar handleSubmit={this.handleSubmit} />
              {results}
            </div>
        );
      }
    });

    var SearchBar = React.createClass({
      getInitialState: function() {
        return {query: ""};
      },
      onSubmit: function() {
        this.props.handleSubmit(this.state.query);
        return false;
      },
      onChange: function(event) {
        this.setState({query: event.target.value});
      },
      onKey: function(e) {
        const enter = 13;
        if (enter == e.keyCode || enter == e.charCode) { // If it's enter
          this.onSubmit();
        } 
      },
      render: function() {
        return (
          <div onKeyPress={this.onKey} >
            <input type='text' placeholder="Namn" onChange={this.onChange} value={this.state.query} />
            <input type='submit' onClick={this.onSubmit} value="Sök"/>
          </div>
        );
      },
    });

    var ResultList = React.createClass({
      render: function() {
        var resultNodes = this.props.data.map(function(result) {
          return <Result fullname={result.fullname} kthid={result.kthid}/>;
        });
        return <div>{resultNodes}</div>;
      }
    });

    // tutorial4.js
    var Result = React.createClass({
      render: function() {
        return (
          <div className="comment">
            <h3 className="commentAuthor">
              {this.props.fullname}
            </h3>
            <p> 
              kthid: <b>{this.props.kthid}</b>
            </p>
            {this.props.children}
          </div>
        );
      }
    });



    var results = [{fullname: "Steve Hopkins", kthid: "steve-o"}, {fullname: "Jeremiah Saltings", kthid: "jerry"}];
    ReactDOM.render(
      <SearchBox data={results} />,
      document.getElementById('reactform')
    );


